;=====================================
; Script Name: Airyina's Keg Filler Deluxe!
; Author: Airyina
; Version: 1.1.0
; Client Tested with: 6.0.10.0
; EUO version tested with: 143
; Shard OSI / FS:  FS: Lexia
; Revision Date:
; Public Release:
; Purpose: To make a keg for you, and then fill the
; keg with what ever potions you want and as many
; kegs as you want.
;=====================================
 
;=============================================
;========User Variables=======================
;=============================================
 
set %secure XXXXXX ; resource bag, can hardcode to your resource bag
set %finishedkegbag XXXXXX ;bag to store finished kegs in, can be hardcoded
 
;=============================================
;=========DO NOT EDIT BELOW THIS LINE=========
;=============================================
 
 MENU CLEAR
 MENU SHOW 0 0
 MENU WINDOW SIZE 300 150
 MENU FONT BGCOLOR BLACK
 MENU FONT ALIGN CENTER
 MENU FONT SIZE 8
 MENU FONT COLOR PURPLE
 MENU FONT STYLE B
 MENU COMBOBOX
 MENU WINDOW TITLE Airyina's Keg Maker
MENU WINDOW COLOR BLACK
MENU TEXT typet 50 15 Type of Keg to make
MENU COMBO CREATE TYPE 55 40 100
MENU COMBO ADD TYPE Greater Agility
MENU COMBO ADD TYPE Greater Strength
MENU COMBO ADD TYPE Total Refresh
MENU COMBO ADD TYPE Deadly Poison
MENU COMBO ADD TYPE Greater Poison
MENU COMBO ADD TYPE Greater Heal
MENU COMBO ADD TYPE Greater Cure
MENU EDIT AMOUNT 90 110 50
MENU TEXT AMOUNT 50 90 Number of Kegs to make
MENU BUTTON START 210 60 60 30 Start
 
set #menubutton N/A
menus:
if #menubutton = N/A
     {
     goto menus
     }
 
MENU GET amount
set %numberofkegs #menures
MENU GET type
set %potion #menures
MENU Clear
MENU Hide
 
if %secure = XXXXXX
  {
  display Please target your resource container
  set #targcurs 1
  wait 10
  secure:
         if #targcurs = 1
            {
            goto secure
            }
  set %secure #ltargetid
  }
 
if %finishedkegbag = XXXXXX
  {
  display Please target your finished keg bag.
  set #targcurs 1
  wait 10
  kegbag:
         if #targcurs = 1
            {
            goto kegbag
            }
  set %finishedkegbag #ltargetid
  }
 
set #lobjectid %secure
event macro 17 0
 
loop:
gosub checkresources
gosub craftsetup
gosub getregs
gosub craft1
gosub craftall
gosub cleanup
if %kegs => %numberofkegs
  {
  display You are done making %numberofkegs %displaydone Kegs!
  halt
  }
goto loop
 
sub checkresources
finditem KGG C_ , #backpackid
        if #findkind = -1
        {
        gosub createtool %1 %2 %3 KGG TLK 4 1 1 3
        }
        wait 10
finditem KTL C_ , #backpackid
        if #findcnt < 2
        {
        gosub createtool %1 %2 %3 KTL ENK 6 3 2 4
        }
        wait 10
finditem RQF C_ , #backpackid
        if #findkind = -1
        {
        gosub createtool %1 %2 %3 RQF ENK 15 5 2 2
        }
        wait 10
finditem QMJ C_ , #backpackid
        if #findkind = -1
        {
        gosub createkeg
        }
        wait 10
return
 
; Author: Airyina
; %1 - %3 not used because of conflict with moveitem sub
; %4 tool we want to make
; %5 material needed
; %6 # of material needed
; %7 # of tools wanted
; %8 gump spot 1
; %9 gump spot 2
sub createtool
finditem %4 C_ , %secure
wait 5
if #findcnt > 0 ;&& #findcnt > 0
        {
        repeat
        gosub moveitem #findid #backpackid 1
        finditem %4 C_ , %secure
        wait 5
        until #findkind = -1
        return
        }
        else
        {
        finditem %5 C_ , #backpackid
        set %needed %6 - #findstack
            if %needed > 0
            {
            finditem %5 C_ , %secure
            gosub moveitem #findid #backpackid %needed
            wait 10
            }
            for %i 1 %7
            {
            set %makelastkay #false
            gosub s7MakeAnything Tinker %8 %9
            }
        }
return
   
sub createkeg
finditem QMJ C_ , %secure
        if #findcnt > 0
        {
        gosub moveitem #findid #backpackid 1
        }
        else
        {
finditem TLK C_ , #backpackid
set %needed 23 - #findstack
if %needed > 0
  {
  finditem TLK C_ , %secure
  gosub moveitem #findid #backpackid %needed
  wait 10
  }
finditem WUF C_ , #backpackid
set %needed 10 - #findstack
if %needed > 0
  {
  finditem WUF C_ , %secure
  gosub moveitem #findid #backpackid %needed
  wait 10
  }
finditem ENK C_ , #backpackid
set %needed 7 - #findstack
if %needed > 0
  {
  finditem ENK C_ , %secure
  gosub moveitem #findid #backpackid %needed
  wait 10
  }
 
repeat
 {
   Finditem IEG C_ , #backpackid
   if #findkind = -1
      {
      set %makelastkay #false
      gosub s7MakeAnything Tinker 3 3
      }
 }
until #findkind <> -1
repeat
 {
   Finditem DJL C_ , #backpackid
   if #findkind = -1
      }
      set %makelastkay #false
      gosub s7MakeAnything Tinker 3 6
      {
 }
until #findkind <> -1
repeat
 {
   Finditem BTL C_ , #backpackid
   If #findkind = -1 || #findcnt =< 2
      {
      set %makelastkay #false
      gosub s7MakeAnything Carpentry 1 2
      }
 }
until #findcnt => 3
repeat
 {
   Finditem OJL C_ , #backpackid
   If #findkind = -1 || #findcnt < 2
      {
      set %makelastkay #false
      gosub s7MakeAnything Carpentry 1 3
      }
 }
until #findcnt => 2
repeat
 {
   Finditem JKF C_ , #backpackid
   if #findkind = -1
      {
      set %makelastkay #false
      gosub s7MakeAnything Carpentry 3 20
      }
 }
until #findkind <> -1
repeat
 {
   Finditem QMJ C_ , #backpackid
   if #findkind = -1
      {
      set %makelastkay #false
      gosub s7MakeAnything Tinker 7 8
      }
 }
until #findkind <> -1
}
return
 
sub craftsetup
if %potion = 1 ; agility
  {
  set %reg JUF
  set %g1 2
  set %g2 2
  set %pot YUF
  set %displaydone Greater , #spc , Agility
  }
if %potion = 2 ; str
  {
  set %reg MZF
  set %g1 5
  set %g2 2
  set %pot XUF
  set %displaydone Greater , #spc , Strength
  }
if %potion = 3 ; refresh
  {
  set %reg KUF
  set %g1 1
  set %g2 2
  set %pot ZUF
  set %displaydone Total , #spc , Refresh
  }
if %potion = 4 ; Deadly Poison
  {
  set %reg WZF
  set %g1 6
  set %g2 4
  set %pot AVF
  set %displaydone Deadly , #spc , Poison
  }
if %potion = 5 ; Greater Poison
  {
  set %reg WZF
  set %g1 6
  set %g2 3
  set %pot AVF
  set %displaydone Greater , #spc , Poison
  }
if %potion = 6 ; Greater Heal
  {
  set %reg JZF
  set %g1 4
  set %g2 3
  set %pot UUF
  set %displaydone Greater , #spc , Heal
  }
if %potion = 7 ; Greater Cure
  {
  set %reg KZF
  set %g1 7
  set %g2 3
  set %pot NUF
  set %displaydone Greater , #spc , Cure
  }
return
 
sub getregs
finditem %reg C_ , #backpackid
if #findstack < 500
  {
  set %needed 500 - #findstack
  }
if %needed > 0
  {
  finditem %reg C_ , %secure
  exevent drag #findid %needed
  exevent dropc #backpackid
  wait 10
  }
finditem WUF C_ , #backpackid
if #findkind = -1
  {
  finditem WUF C_ , %secure
  exevent drag #findid 1
  exevent dropc #backpackid
  wait 10
  }
return
 
sub craft1
finditem QMJ C_ , #backpackid
set %emptykeg #findid
set %makelastkay #false
finditem %pot C_ , %secure
if #findstack > 0
  {
  repeat
        {
        gosub moveitem #findid %emptykeg #findstack
        finditem %pot C_ , %secure
        }
  until #findkind = -1
  return
  }
repeat
     {
     gosub s7MakeAnything Alchemy %g1 %g2
     finditem %pot C_ , #backpackid
     wait 5
     }
until #findkind <> -1
;finditem %pot C_ , #backpackid
repeat
     {
     finditem %pot C_ , #backpackid
     gosub moveitem #findid %emptykeg #findstack
     }
until #findkind = -1
return
 
sub craftall
finditem %pot C_ , #backpackid
repeat
     {
     set %makelastkay #true
     gosub s7MakeAnything Alchemy %g1 %g2
     finditem RQF C_ , #backpackid
     if #findcnt < 1
        {
        gosub createtool %1 %2 %3 RQF ENK 15 5 2 2
        }
     finditem %reg C_ , #backpackid
     if #findstack < 10
        {
        gosub getregs
        }
     finditem %pot C_ , #backpackid
     }
     until #findkind <> -1
return
 
sub cleanup
finditem %emptykeg C_ , #backpackid
gosub moveitem #findid %finishedkegbag 1
wait 10
finditem %reg C_ , #backpackid
gosub moveitem #findid %secure #findstack
wait 10
finditem %pot C_ , #backpackid
gosub moveitem #findid %secure #findstack
wait 10
finditem WUF C_ , #backpackid
gosub moveitem #findid %secure #findstack
set %kegs %kegs + 1
return
 
 
;========================================
;======Other Peoples Subs================
;========================================
; Sub from Cstalker
; %1 #findid
; %2 cont to
; %3 ammount
sub moveitem
If %2 = YES
 {
  exevent drag %1 %3
  wait 5
  exevent dropg #charposx #charposy #charposz
 }
else
 {
  exevent drag %1 %3
  ;wait 5
  exevent dropc %2
  wait 5
 }
return
 
;----
;* @name s7MakeAnything
;* @author snicker7
;* @ver 1.3 19Aug05
;* @purpose Crafting sub capable of dealing with the
;*      standard crafting gump for all crafting skills.
;* @params      %1      Crafting skill. Possible values are:
;*                      Tailor, Smith, Carpentry, Cooking,
;*                      Alchemy, Stonecrafting, Tinker,
;*                      Inscription, or Cartography
;*              %2      Three possible options:
;*                      SelectMaterial: Selects the material to
;*                              craft with (if avaliable) by
;*                              index which is defined by %3.
;*                      Smelt/Cut: Only avaliable if %1 is
;*                              'Tailor' or 'Smith', respectively.
;*                              Will cut or smelt the item passed
;*                              by ID as variable %3.
;*                      For Crafting: This should be a number
;*                              which corresponds to the category
;*                              on the crafting gump beginning
;*                              with the first category as 1.
;*              %3      The material index for SelectMaterial,
;*                      the ID of the item to be smelted/cut for
;*                      Smelt/Cut, or the selection number of the
;*                      item you wish to make on the crafting menu.
;*              %4      (optional) ID of specific tool to use. If
;*                      %4 is defined, the sub will use this tool
;*                      only to craft with. Used for runic kits.
;*                      The sub will return #false if the tool is
;*                      not found. Slower, as the tool will be
;*                      opened every call of the script, rather
;*                      than just waiting for the gump to return,
;*                      ensuring that the tool menu is the right
;*                      tool.
;* @returns     #true   The sub executed successfully.
;*              #false  A tool was not found to perform the
;*                      necessary operations. Useful, if the sub
;*                      returns #false, simply call it again to
;*                      make the correct tool.
;* @notes       This sub automatically determines when to "Make Last."
;*              If you call the sub twice in a row with the same
;*              options, the second time it will click make last
;*              instead of clicking through the whole menu.
;* @example:    call s7subs.euo s7MakeAnything Smith 7 10 ;Make a warfork
;*              call s7subs.euo s7MakeAnything Stonecrafting SelectMaterial 2 ;select dullcopper granite
;*              call s7subs.euo s7MakeAnything Tailor Cut DFKLSED ;cuts the item with ID DFKLSED
;*              call s7subs.euo s7MakeAnything Smith 7 10 EASUSPS ;makes a warfork using the tool with ID EASUSPS
;* @status almost done. still need to put in the cartotool type and find all types for all tools.
;----
sub s7MakeAnything
        if %0 < 3
                return #false
        namespace push
        namespace local _s7MakeAnything
        if %0 = 4 && !tool <> N/A
        {
                finditem %4 C_ , #backpackid
                if #findkind = -1 2
                        namespace pop
                        return #false
                if ( #findtype notin !tool && #findid notin !tool ) 2
                        namespace pop
                        return #false
                set !tool %4
                set !FirstCall #true
        }
        if !1 = %1 && !2 = %2 && !3 = %3 && %2 <> SelectMaterial && !2 notin Smelt_Cut
                set !MakeLast %makelastkay
        if !1 <> %1 || !2 <> %2 || !3 <> %3 || %2 = SelectMaterial || %2 in Smelt_Cut
        {
                set !1 %1
                if !1 = Tailor
                        set !tool HAG
                if !1 = Smith
                        set !tool OBG_TBG_TLH_FBG
                if !1 = Carpentry
                        set !tool EGG_IGG_KGG
                if !1 = Cooking
                        set !tool BCG_DND_OGG
                if !1 = Alchemy
                        set !tool RQF
                if !1 = Stonecrafting
                        set !tool ZEH
                if !1 = Tinker
                        set !tool JTL_KTL_GTL
                if !1 = Inscription
                        set !tool PBG
                if !1 = Cartography
                        set !tool PBG
                if %0 = 4
                {
                        finditem %4 C_ , #backpackid
                        if #findkind = -1 2
                                namespace pop
                                return #false
                        if #findtype notin !tool 2
                                namespace pop
                                return #false
                        set !tool %4
                }
                if %0 < 4
                {
                        finditem !tool C_ , #backpackid
                        if #findkind = -1 2
                                namespace Pop
                                return #false
                }
                set !FirstCall #true
                set !MakeLast #false
                if %2 in smelt_cut 3
                        set !FirstCall #false
                        set !destroyID %3
                        set !destroy #true
                if !Destroy && !1 notin smith_tailor 2
                        namespace Pop
                        return #false
                if %2 notin smelt_cut 2
                        set !3 %3
                        set !2 %2
                if !2 = SelectMaterial
                        set !2 15
        }
        for !selection 2 3
        {
                for !loop 1 1
                {
                        set #result #true
                        if !1 = Tailor && !destroy
                                set !loop 2
                        if ( ! !FirstCall || ( !1 = Smith && !Destroy ) ) && !loop <> 2 2
                                gosub s7WaitForVars contsize = 530_437 contname = generic_gump 2
                                set !loop 1
                        if ( ! #result || !FirstCall ) && !loop <> 2
                        {
                                gosub s7WaitForVars contsize = 530_437 contname = generic_gump 1
                                finditem !tool C_ , #backpackid
                                if #findkind = -1 2
                                        namespace Pop
                                        return #false
                                gosub s7WaitForAction 12
                                set #lobjectid #findid
                                event macro 17 0
                                set !loop 0
                                set !FirstCall #False
                        }
                }
                set !CraftContPosX #contposx
                set !CraftContPosY #contposy
                if !MakeLast && ! !destroy
                {
                        set !_Cx #contposx + 280
                        set !_Cy #contposy + 410
                        click !_Cx !_Cy
                        namespace Pop
                        return #true
                }
                if !selection = 2
                {
                        if !destroy && !1 = Tailor
                        {
                                finditem JAG_KAG C
                                if #findkind = -1 2
                                        namespace pop
                                        return #false
                                set #lobjectid #findid
                                set #ltargetid !destroyid
                                set #ltargetkind 1
                                gosub s7WaitForAction 12
                                event macro 17 0
                                target 2s
                                event macro 22 0
                                set !destroy #false
                                namespace pop
                                return #true
                        }
                        wait 10
                        set !_Cx #contposx + 20
                        set !_Cy ( #contposy + 70 + ( !2 * 20 ) )
                        if !destroy && !1 = Smith
                                set !_Cy ( #contposy + 70 + ( 14 * 20 ) )
                        click !_Cx !_Cy
                        if !destroy && !1 = Smith
                        {
                                target 2s
                                set #ltargetid !destroyid
                                set #ltargetkind 1
                                event macro 22 0
                                set !destroy #false
                                gosub s7WaitForVars contsize = 530_437 contname = generic_gump 2
                                namespace pop
                                return #true
                        }
                }
                if !selection = 3
                {
                        set !3t !3
                        for !loop 0 1
                        {
                                if !3t > 10
                                {
                                        set !_Cx #contposx + 380
                                        set !_Cy #contposy + 270
                                        click !_Cx !_Cy
                                        set !3t !3t - 10
                                        set !loop 0
                                }
                                if !3t <= 10
                                {
                                        set !_Cx #contposx + 230
                                        set !_Cy ( #contposy + 50 + ( !3t * 20 ) )
                                        click !_Cx !_Cy
                                        gosub s7WaitForVars contsize = 530_437 contname = generic_gump 2
                                        namespace Pop
                                        return #true
                                }
                        }
                }
        }
 
 
;----
;* @name s7WaitForAction
;* @author snicker7
;* @ver 1.1 31Jan05
;* @purpose waits 1.3 seconds before continuing, useful for waiting to perform
;*    another action
;* @params      none
;* @returns none
;* @notes probably not an original idea, but I need to use it frequently and it
;*    was easier to write it myself than to try to look for it as written by
;*    someone else
;* @example: call s7Subs.euo s7WaitForAction 13
;* @status tested good
sub s7WaitForAction
        _s7WaitForAction:
        if %_s7ActionTimer + %1 > #scnt2 2
                wait 1
                goto _s7WaitForAction
        set %_s7ActionTimer #scnt2
return
 
;----
;* @name s7WaitForVars
;* @author snicker7, inspired by Quintok, and of course, Smertrios
;* @ver 1.2 24Aug05
;* @purpose Multiple input sysvar waiter.
;* @params      %1*n is the gump sysvar being checked
;*              %2*n is the comparative operator (>, <, <>, =, etc)
;*              %3*n is the desired value of the sysvar
;*              %nfinal is the timeout in seconds
;* @returns #false if it times out
;*          #true if success
;* @notes       %1 does not require the preceding number sign
;*              one line shorter than Q's, no disrespect son
;*              originally written by Smertrios, included in Lexia
;*              Multiple inputs by Quintok, Obfuscation and name-
;*              spacing by snicker7!
;* @example: call s7Subs.euo s7WaitForVars contID = #backpackID contSize = 7_9 3
;* @status tested good
sub s7WaitForVars
        namespace Push
        namespace Local _s7WFVs
        set !C %0 / 3
        set !T #scnt + 5
        if ( %0 % 3 ) = 1
                set !T #scnt + % . %0
        for !i 1 !C
        {
                set !o 3 * !i - 2
                set !p !o + 1
                set !q !o + 2
                if ! ( # . % . !o % . !p % . !q )
                        set !i 0
                if #scnt > !T 2
                        namespace pop
                        return #false
        }
        namespace Pop
return #true
